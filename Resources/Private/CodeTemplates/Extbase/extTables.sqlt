{namespace k=EBT\ExtensionBuilder\ViewHelpers}{escaping off}<k:format.trim>
<f:for each="{extension.domainObjects}" as="domainObject">
#
# Table structure for table '{domainObject.databaseTableName}'
#
CREATE TABLE {domainObject.databaseTableName} (
<f:for each="{k:listForeignKeyRelations(domainObject:domainObject)}" as="relation">
	{relation.foreignKeyName} int(11) unsigned DEFAULT '0' NOT NULL,</f:for>
<f:for each="{domainObject.properties}" as="property">
	{property.sqlDefinition}</f:for>
<k:mapping renderCondition="needsTypeField" domainObject="{domainObject}">
	tx_extbase_type varchar(255) DEFAULT '' NOT NULL,
</k:mapping>

);
</f:for>
</k:format.trim>

<f:for each="{extension.domainObjects}" as="domainObject">
   <f:groupedFor each="{domainObject.zeroToManyRelationProperties}" as="relationsWithSameForeignTable" groupBy="foreignDatabaseTableName" groupKey="tableName">
      <f:if condition="{tableName}">
        <f:if condition="{relation.renderType} == 'inline'"><f:if condition="{tableName} == 'sys_file_reference'"><f:else>
#
# Table structure for table '{tableName}'
#
CREATE TABLE {tableName} (
<f:for each="{relationsWithSameForeignTable}" as="relation">
	{relation.foreignKeyName} int(11) unsigned DEFAULT '0' NOT NULL,
</f:for>
);
        </f:else></f:if></f:if>
      </f:if>
   </f:groupedFor>
   <f:if condition="{domainObject.categorizable}">
#
# Table structure for table '{domainObject.databaseTableName}'
#
CREATE TABLE {domainObject.databaseTableName} (
	categories int(11) unsigned DEFAULT '0' NOT NULL,
);
   </f:if>

   <f:for each="{domainObject.anyToManyRelationProperties}" as="relation">
      <f:if condition="{relation.useMMTable}">
#
# Table structure for table '{relation.relationTableName}'
#
CREATE TABLE {relation.relationTableName} (
	uid_local int(11) unsigned DEFAULT '0' NOT NULL,
	uid_foreign int(11) unsigned DEFAULT '0' NOT NULL,
	sorting int(11) unsigned DEFAULT '0' NOT NULL,
	sorting_foreign int(11) unsigned DEFAULT '0' NOT NULL,

	PRIMARY KEY (uid_local,uid_foreign),
	KEY uid_local (uid_local),
	KEY uid_foreign (uid_foreign)
);
       </f:if>
    </f:for>
</f:for>
