{namespace k=EBT\ExtensionBuilder\ViewHelpers}<f:format.raw><k:openingTag>html
    xmlns:f="http://typo3.org/ns/TYPO3/CMS/Fluid/ViewHelpers"
    xmlns:be="http://typo3.org/ns/TYPO3/CMS/Backend/ViewHelpers"
    data-namespace-typo3-fluid="true"</k:openingTag>

<k:openingTag>f:layout name="Default" /</k:openingTag>

This template is responsible for creating a table of domain objects.

If you modify this template, do not forget to change the overwrite settings
in /Configuration/ExtensionBuilder/settings.yaml:
  Resources:
    Private:
      Backend:
        Templates:
          {domainObject.name}:
            {action.name -> k:format.uppercaseFirst()}.html: keep

Otherwise your changes will be overwritten the next time you save the extension in the extension builder

<k:openingTag>f:section name="Buttons"</k:openingTag>
    <k:openingTag>be:moduleLayout.button.linkButton
        icon="actions-add"
        title="<k:curlyBrackets>f:translate(id: 'LLL:EXT:backend/Resources/Private/Language/locallang_layout.xlf:newRecordGeneral')</k:curlyBrackets>"
        link="<k:curlyBrackets>f:uri.action(controller: '{domainObject.name}', action: 'new')</k:curlyBrackets>"
    /</k:openingTag>
<k:openingTag>/f:section</k:openingTag>

<k:openingTag>f:section name="Content"</k:openingTag>
    <h1>Listing for {domainObject.name}</h1>

    <k:openingTag>f:flashMessages /</k:openingTag>

    <table class="{extension.shortExtensionKey}">
        <k:format.removeMultipleNewlines><tr>
            <f:for each="{domainObject.properties}" as="property"><f:if condition="{property.isDisplayable}">
            <th><k:openingTag>f:translate key="{property.labelNamespace}" /</k:openingTag></th>
            </f:if></f:for>
            <th></th>
            <th></th>
        </tr>
        </k:format.removeMultipleNewlines>
        <k:format.removeMultipleNewlines>
        <k:openingTag>f:for each="{domainObject.name -> k:format.lowercaseFirst() -> k:pluralize() -> k:curlyBrackets()}" as="{domainObject.name -> k:format.lowercaseFirst()}"</k:openingTag>
            <tr>
            <f:for each="{domainObject.properties}" as="property"><f:if condition="{property.isDisplayable}">
                <td><k:openingTag>f:link.action action="show" arguments="<k:curlyBrackets>{domainObject.name -> k:format.lowercaseFirst()}: {domainObject.name -> k:format.lowercaseFirst()}</k:curlyBrackets>"</k:openingTag><k:curlyBrackets>{domainObject.name -> k:format.lowercaseFirst()}.{property.nameToBeDisplayedInFluidTemplate}</k:curlyBrackets><k:openingTag>/f:link.action</k:openingTag></td>
            </f:if></f:for>

                <td><k:openingTag>f:link.action action="edit" arguments="<k:curlyBrackets>{domainObject.name -> k:format.lowercaseFirst()}: {domainObject.name -> k:format.lowercaseFirst()}</k:curlyBrackets>" class="btn btn-default"</k:openingTag>Edit<k:openingTag>/f:link.action</k:openingTag></td>
                <td><k:openingTag>f:link.action action="delete" arguments="<k:curlyBrackets>{domainObject.name -> k:format.lowercaseFirst()}: {domainObject.name -> k:format.lowercaseFirst()}</k:curlyBrackets>" class="btn btn-danger"</k:openingTag>Delete<k:openingTag>/f:link.action</k:openingTag></td>
            </tr>
        <k:openingTag>/f:for</k:openingTag>
        </k:format.removeMultipleNewlines>
    </table>

    <k:openingTag>f:link.action action="new" class="btn btn-default"</k:openingTag>New {domainObject.name}<k:openingTag>/f:link.action</k:openingTag>
<k:openingTag>/f:section</k:openingTag>
<k:openingTag>/html</k:openingTag></f:format.raw>
