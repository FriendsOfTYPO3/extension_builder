<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<xliff version="1.0">
	<file source-language="en" datatype="plaintext" original="EXT:extension_builder/Resources/Private/Language/locallang.xlf" date="2012-02-29T20:52:35Z"
		  product-name="extension_builder">
		<header/>
		<body>
			<trans-unit id="error.extension.0" resname="error.extension.0">
				<source>An extension key must have minimum 3, maximum 30 characters (not counting underscores)</source>
			</trans-unit>
			<trans-unit id="error.extension.1" resname="error.extension.1">
				<source>Illegal character(s) in extension key. Allowed characters are: a-z (lowercase), 0-9 and '_'
					(underscore)
				</source>
			</trans-unit>
			<trans-unit id="error.extension.2" resname="error.extension.2">
				<source>The key may not begin with one of the following prefixes:
					tx,u,user_,pages,tt_,sys_,ts_language_,csh_
				</source>
			</trans-unit>
			<trans-unit id="error.extension.3" resname="error.extension.3">
				<source>Extension keys cannot start or end with 0-9 and '_' (underscore)</source>
			</trans-unit>
			<trans-unit id="error.extension.500" resname="error.extension.500">
				<source>There is an existing piBased extension with this extension key. Please choose another extension
					key or rename the existing extension directory
				</source>
			</trans-unit>
			<trans-unit id="name" resname="name">
				<source>Name</source>
			</trans-unit>
			<trans-unit id="key" resname="key">
				<source>Key</source>
			</trans-unit>
			<trans-unit id="extensionTitle" resname="extensionTitle">
				<source>Extension title</source>
			</trans-unit>
			<trans-unit id="extensionKey" resname="extensionKey">
				<source>Extension Key</source>
			</trans-unit>
			<trans-unit id="descr_extensionKey" resname="descr_extensionKey">
				<source>The extensionkey should be lowercase and without spaces. It will be the unique identifier for
					this extension.
				</source>
			</trans-unit>
			<trans-unit id="vendorName" resname="vendorName">
				<source>Vendor name</source>
			</trans-unit>
			<trans-unit id="descr_vendorName" resname="descr_vendorName">
				<source>The vendor name is the first part of the new package identifier</source>
			</trans-unit>
			<trans-unit id="short_description" resname="short_description">
				<source>Description</source>
			</trans-unit>
			<trans-unit id="description" resname="description">
				<source>Description</source>
			</trans-unit>
			<trans-unit id="version" resname="version">
				<source>Version</source>
			</trans-unit>
			<trans-unit id="target_version" resname="target_version">
				<source>Target version</source>
			</trans-unit>
			<trans-unit id="descr_target_version" resname="descr_target_version">
				<source>Select the TYPO3 version the extension requires.</source>
			</trans-unit>
			<trans-unit id="state" resname="state">
				<source>State</source>
			</trans-unit>
			<trans-unit id="alpha" resname="alpha">
				<source>Alpha</source>
			</trans-unit>
			<trans-unit id="beta" resname="beta">
				<source>Beta</source>
			</trans-unit>
			<trans-unit id="stable" resname="stable">
				<source>Stable</source>
			</trans-unit>
			<trans-unit id="experimental" resname="experimental">
				<source>Experimental</source>
			</trans-unit>
			<trans-unit id="test" resname="test">
				<source>Test</source>
			</trans-unit>
			<trans-unit id="category" resname="category">
				<source>Category</source>
			</trans-unit>
			<trans-unit id="custom_category" resname="custom_category">
				<source>OR custom</source>
			</trans-unit>
			<trans-unit id="descr_custom_category" resname="descr_custom_category">
				<source>You can define an own category here</source>
			</trans-unit>
			<trans-unit id="descr_category" resname="descr_category">
				<source>The category this extension belongs to in the extension manager.</source>
			</trans-unit>
			<trans-unit id="misc" resname="misc">
				<source>Miscellaneous</source>
			</trans-unit>
			<trans-unit id="services" resname="services">
				<source>Services</source>
			</trans-unit>
			<trans-unit id="backend" resname="backend">
				<source>Backend</source>
			</trans-unit>
			<trans-unit id="frontend" resname="frontend">
				<source>Frontend</source>
			</trans-unit>
			<trans-unit id="templates" resname="templates">
				<source>Templates</source>
			</trans-unit>
			<trans-unit id="examples" resname="examples">
				<source>Examples</source>
			</trans-unit>
			<trans-unit id="distribution" resname="distribution">
				<source>Distribution</source>
			</trans-unit>
			<trans-unit id="documentation" resname="documentation">
				<source>Documentation</source>
			</trans-unit>
			<trans-unit id="disableVersioning" resname="disableVersioning">
				<source>Disable versioning</source>
			</trans-unit>
			<trans-unit id="descr_disableVersioning" resname="descr_disableVersioning">
				<source>Check this if your extension needs no support for versioning. This will skip the creation of
					versioning related columns in the database
				</source>
			</trans-unit>
			<trans-unit id="disableLocalization" resname="disableLocalization">
				<source>Disable localization</source>
			</trans-unit>
			<trans-unit id="descr_disableLocalization" resname="descr_disableLocalization">
				<source>Check this if your extension needs no support for localization. This will skip the creation of
					localization related columns in the database
				</source>
			</trans-unit>
			<trans-unit id="generateDocumentationTemplate" resname="generateDocumentationTemplate">
				<source>Generate documentation</source>
			</trans-unit>
			<trans-unit id="descr_generateDocumentationTemplate" resname="descr_generateDocumentationTemplate">
				<source>Check this if you want a documentation generated for your extension.</source>
			</trans-unit>
			<trans-unit id="generateEditorConfig" resname="generateEditorConfig">
				<source>Generate editorconfig file</source>
			</trans-unit>
			<trans-unit id="descr_generateEditorConfig" resname="descr_generateEditorConfig">
				<source>Check this if you want a generated editorconfig file for your extension.</source>
			</trans-unit>
			<trans-unit id="generateEmptyGitRepository" resname="generateEmptyGitRepository">
				<source>Generate empty git repository</source>
			</trans-unit>
			<trans-unit id="descr_generateEmptyGitRepository" resname="descr_generateEmptyGitRepository">
				<source>Check this if you want to generate an empty git repository for your extension and want to publish it later on.</source>
			</trans-unit>
			<trans-unit id="sourceLanguage" resname="sourceLanguage">
				<source>Source language for xliff files</source>
			</trans-unit>
			<trans-unit id="descr_sourceLanguage" resname="descr_sourceLanguage">
				<source>The source language for xliff files is the 2 letter language code in which the "source" of a label is defined.
					In general it should be "en" for English. This label can later be translated into other languages.
				</source>
			</trans-unit>
			<trans-unit id="dependsOn" resname="dependsOn">
				<source>Depends on</source>
			</trans-unit>
			<trans-unit id="descr_dependsOn" resname="descr_dependsOn">
				<source>If the extension is depending on other extensions, enter the extension keys here (one per line
					followed by a double arrow and the lowest version number).
				</source>
			</trans-unit>
			<trans-unit id="persons" resname="persons">
				<source>Extension authors</source>
			</trans-unit>
			<trans-unit id="role" resname="role">
				<source>Role</source>
			</trans-unit>
			<trans-unit id="developer" resname="developer">
				<source>Developer</source>
			</trans-unit>
			<trans-unit id="product_manager" resname="product_manager">
				<source>Product manager</source>
			</trans-unit>
			<trans-unit id="email" resname="email">
				<source>Email</source>
			</trans-unit>
			<trans-unit id="company" resname="company">
				<source>Company</source>
			</trans-unit>
			<trans-unit id="plugins" resname="plugins">
				<source>Frontend plugins</source>
			</trans-unit>
			<trans-unit id="descr_plugins" resname="descr_plugins">
				<source>The frontend plugins which have to be registered in the extension</source>
			</trans-unit>
			<trans-unit id="controller_action_combinations" resname="controller_action_combinations">
				<source>Controller action combinations</source>
			</trans-unit>
			<trans-unit id="descr_controller_action_combinations" resname="descr_controller_action_combinations">
				<source>Here you can configure, which controller action combinations this plugin/module should have.
					Example: &lt;br /&gt;Blog =&gt; list,show &lt;br /&gt;(one controller per line, actions comma
					separated) &lt;br /&gt;If you leave this empty, all available actions are configured for this
					plugin.
				</source>
			</trans-unit>
			<trans-unit id="noncacheable_actions" resname="noncacheable_actions">
				<source>Non cacheable actions</source>
			</trans-unit>
			<trans-unit id="descr_noncacheable_actions" resname="descr_noncacheable_actions">
				<source>Typically create, delete and update actions should not be cached. (Same format as above)
				</source>
			</trans-unit>
			<trans-unit id="backendModules" resname="backendModules">
				<source>Backend modules</source>
			</trans-unit>
			<trans-unit id="mainModule" resname="mainModule">
				<source>Main module</source>
			</trans-unit>
			<trans-unit id="uniqueInThisModel" resname="uniqueInThisModel">
				<source>Should be unique for this model</source>
			</trans-unit>
			<trans-unit id="type" resname="type">
				<source>Type</source>
			</trans-unit>
			<trans-unit id="more" resname="more">
				<source>More</source>
			</trans-unit>
			<trans-unit id="moreOptions" resname="moreOptions">
				<source>More options</source>
			</trans-unit>
			<trans-unit id="advancedOptions" resname="advancedOptions">
				<source>Advanced options</source>
			</trans-unit>
			<trans-unit id="remove" resname="remove">
				<source>Remove</source>
			</trans-unit>
			<trans-unit id="add" resname="add">
				<source>Add</source>
			</trans-unit>
			<trans-unit id="zeroToOne" resname="zeroToOne">
				<source>1:1</source>
			</trans-unit>
			<trans-unit id="manyToOne" resname="manyToOne">
				<source>n:1</source>
			</trans-unit>
			<trans-unit id="zeroToMany" resname="zeroToMany">
				<source>1:n</source>
			</trans-unit>
			<trans-unit id="manyToMany" resname="manyToMany">
				<source>m:n</source>
			</trans-unit>
			<trans-unit id="renderType" resname="renderType">
				<source>Render type</source>
			</trans-unit>
			<trans-unit id="desc_renderType" resname="desc_renderType">
				<source>How should the relation be displayed in backend forms?</source>
			</trans-unit>
			<trans-unit id="selectSingleBox" resname="selectSingleBox">
				<source>Dropdown (multiple)</source>
			</trans-unit>
			<trans-unit id="selectCheckBox" resname="selectCheckBox">
				<source>Checkboxes</source>
			</trans-unit>
			<trans-unit id="selectMultipleSideBySide" resname="selectMultipleSideBySide">
				<source>Side by side multi select</source>
			</trans-unit>
			<trans-unit id="inline" resname="inline">
				<source>Inline (IRRE)</source>
			</trans-unit>
			<trans-unit id="select" resname="select">
				<source>Dropdown</source>
			</trans-unit>
			<trans-unit id="isNullable" resname="isNullable">
				<source>Is nullable?</source>
			</trans-unit>
			<trans-unit id="descr_isNullable" resname="descr_isNullable">
				<source>If set to true, this field can be null</source>
			</trans-unit>
			<trans-unit id="isExcludeField" resname="isExcludeField">
				<source>Is exclude field?</source>
			</trans-unit>
			<trans-unit id="descr_isExcludeField" resname="descr_isExcludeField">
				<source>If set to true, this field will only be visible for admin users per default</source>
			</trans-unit>
			<trans-unit id="isL10nModeExclude" resname="isL10nModeExclude">
				<source>Is l10n_mode = exclude?</source>
			</trans-unit>
			<trans-unit id="descr_isL10nModeExclude" resname="descr_isL10nModeExclude">
				<source>If set to true, this field will be set to l10n_mode = exclude</source>
			</trans-unit>
			<trans-unit id="newModelObject" resname="newModelObject">
				<source>New model object</source>
			</trans-unit>
			<trans-unit id="domainObjectSettings" resname="domainObjectSettings">
				<source>Domain object settings</source>
			</trans-unit>
			<trans-unit id="objectType" resname="objectType">
				<source>Object type</source>
			</trans-unit>
			<trans-unit id="descr_objectType" resname="descr_objectType">
				<source>Value objects are simple objects that are defined by their value and have no 'identity'</source>
			</trans-unit>
			<trans-unit id="entity" resname="entity">
				<source>Entity</source>
			</trans-unit>
			<trans-unit id="valueObject" resname="valueObject">
				<source>Value object</source>
			</trans-unit>
			<trans-unit id="isAggregateRoot" resname="isAggregateRoot">
				<source>Is aggregate root?</source>
			</trans-unit>
			<trans-unit id="descr_isAggregateRoot" resname="descr_isAggregateRoot">
				<source>If true, the Extension Builder will generate a repository for this model</source>
			</trans-unit>
			<trans-unit id="enableSorting" resname="enableSorting">
				<source>Enable sorting?</source>
			</trans-unit>
			<trans-unit id="descr_enableSorting" resname="descr_enableSorting">
				<source>If true, sorting in the backend is enabled</source>
			</trans-unit>
			<trans-unit id="addDeletedField" resname="addDeletedField">
				<source>Add deleted field</source>
			</trans-unit>
			<trans-unit id="descr_addDeletedField" resname="descr_addDeletedField">
				<source>Deleting a record with "delete" field will not really delete the record, but just set the delete
					flag to true
				</source>
			</trans-unit>
			<trans-unit id="addHiddenField" resname="addHiddenField">
				<source>Add hidden field</source>
			</trans-unit>
			<trans-unit id="descr_addHiddenField" resname="descr_addHiddenField">
				<source>The hidden field is an "enable" field. Only records which are not hidden will be displayed
				</source>
			</trans-unit>
			<trans-unit id="addStarttimeEndtimeFields" resname="addStarttimeEndtimeFields">
				<source>Add starttime/endtime fields</source>
			</trans-unit>
			<trans-unit id="descr_addStarttimeEndtimeFields" resname="descr_addStarttimeEndtimeFields">
				<source>If set, the related records will have a startime and endtime as "enable" field</source>
			</trans-unit>
			<trans-unit id="enableCategorizable" resname="enableCategorizable">
				<source>Enable categorization?</source>
			</trans-unit>
			<trans-unit id="descr_enableCategorizable" resname="descr_enableCategorizable">
				<source>If true, categorization in the backend is enabled for this model</source>
			</trans-unit>
			<trans-unit id="mapToTable" resname="mapToTable">
				<source>Map to existing table</source>
			</trans-unit>
			<trans-unit id="descr_mapToTable" resname="descr_mapToTable">
				<source>If the model should extend an existing table, you can configure this here</source>
			</trans-unit>
			<trans-unit id="parentClass" resname="parentClass">
				<source>Extend existing model class</source>
			</trans-unit>
			<trans-unit id="descr_parentClass" resname="descr_parentClass">
				<source>If this model should extend an existing other model, name it here</source>
			</trans-unit>
			<trans-unit id="defaultActions" resname="defaultActions">
				<source>Default actions</source>
			</trans-unit>
			<trans-unit id="actionType" resname="actionType">
				<source>Action type</source>
			</trans-unit>
			<trans-unit id="descr_actionType" resname="descr_actionType">
				<source>For each selected action, the Extension Builder will generate a template and a action method in
					the controller of this model. If the model is an aggregate root the default CRUD actions will be
					generated per default.
				</source>
			</trans-unit>
			<trans-unit id="show" resname="show">
				<source>show</source>
			</trans-unit>
			<trans-unit id="index" resname="index">
				<source>index</source>
			</trans-unit>
			<trans-unit id="list" resname="list">
				<source>list</source>
			</trans-unit>
			<trans-unit id="create_new" resname="create_new">
				<source>new/create</source>
			</trans-unit>
			<trans-unit id="edit_update" resname="edit_update">
				<source>edit/update</source>
			</trans-unit>
			<trans-unit id="delete" resname="delete">
				<source>delete</source>
			</trans-unit>
			<trans-unit id="properties" resname="properties">
				<source>Properties</source>
			</trans-unit>
			<trans-unit id="propertyName" resname="propertyName">
				<source>Property name</source>
			</trans-unit>
			<trans-unit id="descr_propertyName" resname="descr_propertyName">
				<source>The name should be lowerCamelCase and unique in this model</source>
			</trans-unit>
			<trans-unit id="propertyType" resname="propertyType">
				<source>Property type</source>
			</trans-unit>
			<trans-unit id="descr_propertyType" resname="descr_propertyType">
				<source>All types with * are not yet supported by the frontend form generation/validation</source>
			</trans-unit>
			<trans-unit id="string" resname="string">
				<source>String</source>
			</trans-unit>
			<trans-unit id="text" resname="text">
				<source>Text</source>
			</trans-unit>
			<trans-unit id="richText" resname="richText">
				<source>Rich text*</source>
			</trans-unit>
			<trans-unit id="integer" resname="integer">
				<source>Integer</source>
			</trans-unit>
			<trans-unit id="floatingPoint" resname="floatingPoint">
				<source>Floating point</source>
			</trans-unit>
			<trans-unit id="boolean" resname="boolean">
				<source>Boolean</source>
			</trans-unit>
			<trans-unit id="dateTime" resname="dateTime">
				<source>DateTime (timestamp)</source>
			</trans-unit>
			<trans-unit id="date" resname="date">
				<source>Date (timestamp)</source>
			</trans-unit>
			<trans-unit id="nativeDateTime" resname="nativeDateTime">
				<source>DateTime</source>
			</trans-unit>
			<trans-unit id="nativeDate" resname="nativeDate">
				<source>Date</source>
			</trans-unit>
			<trans-unit id="inputLink" resname="inputLink">
				<source>Link</source>
			</trans-unit>
			<trans-unit id="time" resname="time">
				<source>Time (timestamp)*</source>
			</trans-unit>
			<trans-unit id="nativeTime" resname="time">
				<source>Time*</source>
			</trans-unit>
			<trans-unit id="timeSec" resname="timeSec">
				<source>Time/Sec*</source>
			</trans-unit>
			<trans-unit id="selectList" resname="selectList">
				<source>Select list</source>
			</trans-unit>
			<trans-unit id="file" resname="file">
				<source>File*</source>
			</trans-unit>
			<trans-unit id="image" resname="image">
				<source>Image*</source>
			</trans-unit>
			<trans-unit id="fileReference" resname="fileReference">
				<source>File reference*</source>
			</trans-unit>
			<trans-unit id="folder" resname="folder">
				<source>Folder*</source>
			</trans-unit>
			<trans-unit id="password" resname="password">
				<source>Password</source>
			</trans-unit>
			<trans-unit id="slug" resname="slug">
				<source>Slug</source>
			</trans-unit>
			<trans-unit id="colorPicker" resname="colorPicker">
				<source>Color Picker</source>
			</trans-unit>
			<trans-unit id="passThrough" resname="passThrough">
				<source>Pass through</source>
			</trans-unit>
			<trans-unit id="none" resname="none">
				<source>None</source>
			</trans-unit>
			<trans-unit id="allowedFileTypes" resname="allowedFileTypes">
				<source>Allowed file types</source>
			</trans-unit>
			<trans-unit id="descr_allowedFileTypes" resname="descr_allowedFileTypes">
				<source>Comma separated file endings like: doc,ods</source>
			</trans-unit>
			<trans-unit id="maxItems" resname="maxItems">
				<source>Allowed number of files</source>
			</trans-unit>
			<trans-unit id="isRequired" resname="isRequired">
				<source>Is required?</source>
			</trans-unit>
			<trans-unit id="relations" resname="relations">
				<source>Relations</source>
			</trans-unit>
			<trans-unit id="relationName" resname="relationName">
				<source>Name</source>
			</trans-unit>
			<trans-unit id="descr_relationName" resname="descr_relationName">
				<source>The name should be lowerCamelCase and unique in this model</source>
			</trans-unit>
			<trans-unit id="extensionProperties" resname="extensionProperties">
				<source>Extension properties</source>
			</trans-unit>
			<trans-unit id="tab_label" resname="tab_label">
				<source>Tab label</source>
			</trans-unit>
			<trans-unit id="lazyLoading" resname="lazyLoading">
				<source>Lazy loading</source>
			</trans-unit>
			<trans-unit id="descr_lazyLoading" resname="descr_lazyLoading">
				<source>Make this relation lazy loading</source>
			</trans-unit>
			<trans-unit id="foreignRelationClass" resname="foreignRelationClass">
				<source>Relation to external class</source>
			</trans-unit>
			<trans-unit id="descr_foreignRelationClass" resname="descr_foreignRelationClass">
				<source>If this is a relation to an external model, enter the (full qualified) class name here. The
					class must exist and be loadable
				</source>
			</trans-unit>
			<trans-unit id="modeler_invalidConfigurationTitle" resname="modeler_invalidConfigurationTitle">
				<source>Invalid configuration!</source>
			</trans-unit>
			<trans-unit id="modeler_invalidExtensionPropertiesTitle" resname="modeler_invalidExtensionPropertiesTitle">
				<source>Invalid extension properties</source>
			</trans-unit>
			<trans-unit id="modeler_invalidExtensionProperties" resname="modeler_invalidExtensionProperties">
				<source>Please check the fields in the left panel</source>
			</trans-unit>
			<trans-unit id="modeler_duplicatePropertyNamesTitle" resname="modeler_duplicatePropertyNamesTitle">
				<source>Duplicate property names</source>
			</trans-unit>
			<trans-unit id="modeler_missingModelName" resname="modeler_missingModelName">
				<source>Please enter a model name!</source>
			</trans-unit>
			<trans-unit id="modeler_duplicateModelNamesTitle" resname="modeler_duplicateModelNamesTitle">
				<source>Duplicate model names</source>
			</trans-unit>
			<trans-unit id="modeler_invalidModelConfiguration" resname="modeler_invalidModelConfiguration">
				<source>Invalid fields in model: </source>
			</trans-unit>
			<trans-unit id="modeler_extensionSaveError" resname="modeler_extensionSaveError">
				<source>Extension could not be saved:</source>
			</trans-unit>
			<trans-unit id="modeler_loadPipeConfirmMessage" resname="modeler_loadPipeConfirmMessage">
				<source>Do you really want to clear the current working board and load the selected pipe? Unsaved changes will get lost!</source>
			</trans-unit>
		</body>
	</file>
</xliff>
